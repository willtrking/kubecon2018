// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cart.proto

package proto

import proto1 "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type AddRequest struct {
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
	ProductId string `protobuf:"bytes,2,opt,name=product_id,json=productId" json:"product_id,omitempty"`
}

func (m *AddRequest) Reset()                    { *m = AddRequest{} }
func (m *AddRequest) String() string            { return proto1.CompactTextString(m) }
func (*AddRequest) ProtoMessage()               {}
func (*AddRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

func (m *AddRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

func (m *AddRequest) GetProductId() string {
	if m != nil {
		return m.ProductId
	}
	return ""
}

type CartRequest struct {
	AccountId string `protobuf:"bytes,1,opt,name=account_id,json=accountId" json:"account_id,omitempty"`
}

func (m *CartRequest) Reset()                    { *m = CartRequest{} }
func (m *CartRequest) String() string            { return proto1.CompactTextString(m) }
func (*CartRequest) ProtoMessage()               {}
func (*CartRequest) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *CartRequest) GetAccountId() string {
	if m != nil {
		return m.AccountId
	}
	return ""
}

type UserCart struct {
	Products []*Product `protobuf:"bytes,1,rep,name=products" json:"products,omitempty"`
}

func (m *UserCart) Reset()                    { *m = UserCart{} }
func (m *UserCart) String() string            { return proto1.CompactTextString(m) }
func (*UserCart) ProtoMessage()               {}
func (*UserCart) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *UserCart) GetProducts() []*Product {
	if m != nil {
		return m.Products
	}
	return nil
}

func init() {
	proto1.RegisterType((*AddRequest)(nil), "proto.AddRequest")
	proto1.RegisterType((*CartRequest)(nil), "proto.CartRequest")
	proto1.RegisterType((*UserCart)(nil), "proto.UserCart")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Cart service

type CartClient interface {
	ViewCart(ctx context.Context, in *CartRequest, opts ...grpc.CallOption) (*UserCart, error)
	AddToCart(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*Product, error)
}

type cartClient struct {
	cc *grpc.ClientConn
}

func NewCartClient(cc *grpc.ClientConn) CartClient {
	return &cartClient{cc}
}

func (c *cartClient) ViewCart(ctx context.Context, in *CartRequest, opts ...grpc.CallOption) (*UserCart, error) {
	out := new(UserCart)
	err := grpc.Invoke(ctx, "/proto.Cart/ViewCart", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *cartClient) AddToCart(ctx context.Context, in *AddRequest, opts ...grpc.CallOption) (*Product, error) {
	out := new(Product)
	err := grpc.Invoke(ctx, "/proto.Cart/AddToCart", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Cart service

type CartServer interface {
	ViewCart(context.Context, *CartRequest) (*UserCart, error)
	AddToCart(context.Context, *AddRequest) (*Product, error)
}

func RegisterCartServer(s *grpc.Server, srv CartServer) {
	s.RegisterService(&_Cart_serviceDesc, srv)
}

func _Cart_ViewCart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CartRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CartServer).ViewCart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Cart/ViewCart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CartServer).ViewCart(ctx, req.(*CartRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Cart_AddToCart_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CartServer).AddToCart(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto.Cart/AddToCart",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CartServer).AddToCart(ctx, req.(*AddRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Cart_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto.Cart",
	HandlerType: (*CartServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ViewCart",
			Handler:    _Cart_ViewCart_Handler,
		},
		{
			MethodName: "AddToCart",
			Handler:    _Cart_AddToCart_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cart.proto",
}

func init() { proto1.RegisterFile("cart.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 204 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0x4e, 0x2c, 0x2a,
	0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x05, 0x53, 0x52, 0x82, 0xb9, 0xa9, 0x45, 0xc9,
	0x19, 0x89, 0x79, 0x29, 0x99, 0xc5, 0xa9, 0x10, 0x19, 0x25, 0x2f, 0x2e, 0x2e, 0xc7, 0x94, 0x94,
	0xa0, 0xd4, 0xc2, 0xd2, 0xd4, 0xe2, 0x12, 0x21, 0x59, 0x2e, 0xae, 0xc4, 0xe4, 0xe4, 0xfc, 0xd2,
	0xbc, 0x92, 0xf8, 0xcc, 0x14, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x4e, 0xa8, 0x88, 0x67,
	0x0a, 0x48, 0xba, 0xa0, 0x28, 0x3f, 0xa5, 0x34, 0x19, 0x2c, 0xcd, 0x04, 0x91, 0x86, 0x8a, 0x78,
	0xa6, 0x28, 0xe9, 0x70, 0x71, 0x3b, 0x27, 0x16, 0x95, 0x10, 0x67, 0x98, 0x92, 0x19, 0x17, 0x47,
	0x68, 0x71, 0x6a, 0x11, 0x48, 0x87, 0x90, 0x16, 0x17, 0x07, 0xd4, 0x98, 0x62, 0x09, 0x46, 0x05,
	0x66, 0x0d, 0x6e, 0x23, 0x3e, 0x88, 0xfb, 0xf4, 0x02, 0x20, 0xc2, 0x41, 0x70, 0x79, 0xa3, 0x74,
	0x2e, 0x16, 0xb0, 0x1e, 0x7d, 0x2e, 0x8e, 0xb0, 0xcc, 0xd4, 0x72, 0x30, 0x5b, 0x08, 0xaa, 0x1a,
	0xc9, 0x7a, 0x29, 0x7e, 0xa8, 0x18, 0xdc, 0x12, 0x3d, 0x2e, 0x4e, 0xc7, 0x94, 0x94, 0x90, 0x7c,
	0x30, 0x47, 0x10, 0x2a, 0x8b, 0xf0, 0xbc, 0x14, 0x9a, 0x95, 0x49, 0x6c, 0x60, 0xae, 0x31, 0x20,
	0x00, 0x00, 0xff, 0xff, 0xfb, 0x5a, 0x6a, 0x9a, 0x49, 0x01, 0x00, 0x00,
}
